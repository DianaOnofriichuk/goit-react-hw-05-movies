{"version":3,"file":"static/js/871.69d24cca.chunk.js","mappings":"sSAAMA,EAAM,mCACL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEoBC,MAAM,yDAAD,OAC+BF,IAHxD,cAEGG,EAFH,gBAKkBA,EAASC,OAL3B,cAKGC,EALH,yBAMIA,EAAOC,SANX,yCAQHC,QAAQC,IAAR,MARG,kBASI,IATJ,iFAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBR,MAAM,yDAAD,OACsBF,EADtB,kBACmCU,EADnC,+CAFzB,cAEGP,EAFH,gBAIiBA,EAASC,OAJ1B,cAIGO,EAJH,yBAKIA,EAAML,SALV,kCAOHC,QAAQC,IAAR,MAPG,iFAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kGAEoBX,MAAM,sCAAD,OACYW,EADZ,oBAC+Bb,EAD/B,oBAFzB,cAEGG,EAFH,gBAKmBA,EAASC,OAL5B,cAKGU,EALH,yBAMIA,GANJ,kCAQHP,QAAQC,IAAR,MARG,iFAWA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAAuBF,GAAvB,kGAEoBX,MAAM,4CAAD,OACSW,EADT,4BACoCb,EADpC,oBAFzB,cAEGG,EAFH,gBAIgBA,EAASC,OAJzB,cAIGY,EAJH,yBAKIA,EAAKA,MALT,kCAOHT,QAAQC,IAAR,MAPG,iFAUA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,kGAEoBX,MAAM,4CAAD,OACSW,EADT,4BACoCb,EADpC,2BAFzB,cAEGG,EAFH,gBAImBA,EAASC,OAJ5B,cAIGc,EAJH,yBAKIA,EAAQZ,SALZ,kCAOHC,QAAQC,IAAR,MAPG,iF,+ICdP,EA3BgB,WACd,OAA8BW,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQR,GAAYS,EAAAA,EAAAA,MAAZT,QASR,OARAU,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACuBN,EAAAA,EAAAA,IAAWJ,GADlC,OACQW,EADR,OAEEH,EAAWG,GAFb,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACZ,IAEAO,GAA8B,IAAnBA,EAAQM,QAEnB,wBACGN,EAAQO,KAAI,SAAAC,GACX,OACE,2BACE,cAAGC,UAAU,gBAAb,SAA8BD,EAAOE,UACrC,cAAGD,UAAU,cAAb,SAA4BD,EAAOG,YAF5BH,EAAOI,GAKnB,OAIA,mEACR,C","sources":["api/api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const KEY = '4a38965c8274ee66c1019c21406c4653';\nexport async function getTrendingMovies() {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n    );\n    const movies = await response.json();\n    return movies.results;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n}\n\nexport async function searchMovie(movieName) {\n  try {\n    const response = await fetch(`\n  https://api.themoviedb.org/3/search/movie?api_key=${KEY}&query=${movieName}&language=en-US&page=1&include_adult=false`);\n    const movie = await response.json();\n    return movie.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getMovieDetails(movieId) {\n  try {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n    const detalis = await response.json();\n    return detalis;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getCast(movieId) {\n  try {\n    const response = await fetch(`\n    https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n    const cast = await response.json();\n    return cast.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport async function getReviews(movieId) {\n  try {\n    const response = await fetch(`\n    https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`);\n    const reivews = await response.json();\n    return reivews.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../api/api';\nimport './Reviews.css';\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    async function receiveReviews() {\n      const result = await getReviews(movieId);\n      setReviews(result);\n    }\n    receiveReviews();\n  }, [movieId]);\n\n  if (reviews && reviews.length !== 0) {\n    return (\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p className=\"review-author\">{review.author}</p>\n              <p className=\"review-text\">{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n  return <p>We don't have any reviews for this movie</p>;\n};\nexport default Reviews;\n"],"names":["KEY","getTrendingMovies","fetch","response","json","movies","results","console","log","searchMovie","movieName","movie","getMovieDetails","movieId","detalis","getCast","cast","getReviews","reivews","useState","reviews","setReviews","useParams","useEffect","result","receiveReviews","length","map","review","className","author","content","id"],"sourceRoot":""}